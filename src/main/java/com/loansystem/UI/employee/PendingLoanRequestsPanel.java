/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PendingLoanRequestsPanel.java
 *
 * Created on Apr 26, 2012, 6:49:34 PM
 */
package com.loansystem.UI.employee;

import com.loansystem.backend.model.PendingLoansTabModel;
import com.loansystem.backend.model.PostponeRequestedLoansTabModel;
import com.loansystem.model.Client;
import com.loansystem.model.Loan;
import com.loansystem.model.User;
import java.awt.event.MouseAdapter;
import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Antonve
 */
public class PendingLoanRequestsPanel extends javax.swing.JPanel {

    /** Creates new form PendingLoanRequestsPanel */
    public PendingLoanRequestsPanel(PendingLoansTabModel pendingLoansTabModel, boolean visibility) {
        initComponents();
        ArrayList<Loan> loansList = pendingLoansTabModel.getPendingLoans();

        Object[][] tableObject = createTableData(loansList);
        createTableFromData(tableObject);
        //newLoanRequestTable.put(NewLoanRequestConstants.COL_1, Loan.class.getDeclaredField(TOOL_TIP_TEXT_KEY));


        this.setVisible(visibility);
    }

    public PendingLoanRequestsPanel(PostponeRequestedLoansTabModel postponeRequestedLoansTabModel, boolean visibility) {
         initComponents();
        ArrayList<Loan> loansList = postponeRequestedLoansTabModel.getPostponeRequestedLoans();

        Object[][] tableObject = createTableData(loansList);
        createTableFromData(tableObject);
        this.setVisible(visibility);
    }

    public JTable getPendingLoansTable() {
        return PendingLoansTable;
    }

    public void setPendingLoansTable(JTable PendingLoansTable) {
        this.PendingLoansTable = PendingLoansTable;
    }

    public Loan getSelectedLoan(int row) {
        int columns = PendingLoansTable.getColumnCount();
        // String s = "Are you sure your choice is the loan with next parameters: \n";
        Loan selectedLoanRequest = new Loan();
        selectedLoanRequest.setLoanId((Integer) PendingLoansTable.getValueAt(row, 0));

        return selectedLoanRequest;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        PendingLoansTable = new javax.swing.JTable();

        setMaximumSize(new java.awt.Dimension(659, 114));

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        PendingLoansTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Loan id", "Client", "Date requeted", "Sum", "Client rating", "Client group"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        PendingLoansTable.setAlignmentY(0.0F);
        PendingLoansTable.setAutoscrolls(false);
        PendingLoansTable.setFocusable(false);
        PendingLoansTable.setMaximumSize(new java.awt.Dimension(659, 114));
        PendingLoansTable.setName("PendingLoansTable"); // NOI18N
        jScrollPane1.setViewportView(PendingLoansTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 659, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 639, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 114, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable PendingLoansTable;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    public void removeUnnecessaryLoanFromTable(ArrayList<Loan> loans) {
        Object[][] tableObject = createTableData(loans);
        createTableFromData(tableObject);
    }

    private Object[][] createTableData(ArrayList<Loan> loansList) {
        Loan currentLoan;
        int i = 0;
        Object[][] tableObject = new Object[loansList.size()][6];

        PendingLoansTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);


        Iterator loanRequests = loansList.iterator();
        while (loanRequests.hasNext()) {




            currentLoan = (Loan) loanRequests.next();
            User user = currentLoan.getClient().getUser();
            Client client = user.getClients().get(0);


            tableObject[i][0] = currentLoan.getLoanId();

            tableObject[i][1] = user.getName() + " " + user.getLastName();

            //tableObject[i][1] = currentLoan.getLoanHistory().get(0).getDate();
            /*if (currentLoan.getLoanHistory().size() > 0) {
                //tableObject[i][2] = currentLoan.getLoanHistory().get(0).getDate();
            } else {*/
                tableObject[i][2] = "";
            //}
            tableObject[i][3] = currentLoan.getLoanOffer().getSum();
            tableObject[i][4] = client.getRating();
            tableObject[i][5] = client.getClientGroup().getDescription();

            i++;
        }
        return tableObject;
    }

    private void createTableFromData(Object[][] tableObject) {
        PendingLoansTable.setModel(new javax.swing.table.DefaultTableModel(
                tableObject,
                new String[]{
                    "Loan id", "Client", "Date requested", "Sum", "Client rating", "Client group"
                }));
    }

    public void addPostponeRequestedLoanEntryClickedListener(MouseAdapter pendingLoanEntryClickedListener)    {
        PendingLoansTable.addMouseListener(pendingLoanEntryClickedListener);
    }
}
